import 'package:flutter/material.dart';
import 'package:grouped_list/grouped_list.dart';

List dataDumy = [
  {
    "albumId": 1,
    "id": 1,
    "title": "android tutorial",
    "url": "https://via.placeholder.com/600/92c952",
    "thumbnailUrl": "https://via.placeholder.com/150/92c952",
    "author": "HanNH",
    "group": "android",
    "date": "23/12/2020"
  },
  {
    "albumId": 1,
    "id": 2,
    "title": "ios tutorial",
    "url": "https://via.placeholder.com/600/771796",
    "thumbnailUrl": "https://via.placeholder.com/150/771796",
    "author": "HanNH",
    "group": "ios",
    "date": "23/12/2020"
  },
  {
    "albumId": 1,
    "id": 3,
    "title": "flutter tutorial",
    "url": "https://via.placeholder.com/600/24f355",
    "thumbnailUrl": "https://via.placeholder.com/150/24f355",
    "author": "HanNH",
    "group": "Flutter",
    "date": "23/12/2020"
  },
  {
    "albumId": 1,
    "id": 4,
    "title": "react native tutorial",
    "url": "https://via.placeholder.com/600/d32776",
    "thumbnailUrl": "https://via.placeholder.com/150/d32776",
    "author": "HanNH",
    "group": "react native ",
    "date": "23/12/2020"
  },
  {
    "albumId": 1,
    "id": 5,
    "title": "none",
    "url": "https://via.placeholder.com/600/f66b97",
    "thumbnailUrl": "https://via.placeholder.com/150/f66b97",
    "author": "HanNH",
    "group": "None",
    "date": "23/12/2020"
  }
];
void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        // This is the theme of your application.
        //
        // TRY THIS: Try running your application with "flutter run". You'll see
        // the application has a purple toolbar. Then, without quitting the app,
        // try changing the seedColor in the colorScheme below to Colors.green
        // and then invoke "hot reload" (save your changes or press the "hot
        // reload" button in a Flutter-supported IDE, or press "r" if you used
        // the command line to start the app).
        //
        // Notice that the counter didn't reset back to zero; the application
        // state is not lost during the reload. To reset the state, use hot
        // restart instead.
        //
        // This works for code too, not just values: Most code changes can be
        // tested with just a hot reload.
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: GroupListViewPage(),
    );
  }
}

class GroupListViewPage extends StatefulWidget {
  @override
  _GroupListViewPageState createState() => _GroupListViewPageState();
}

class _GroupListViewPageState extends State<GroupListViewPage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(title: Text("Group List")),
        body: GroupedListView<dynamic, String>(
          elements: dataDumy,
          groupBy: (element) => element['group'],
          groupSeparatorBuilder: (String groupByValue) => Padding(
            padding: EdgeInsets.all(10),
            child: Row(
              children: [
                Flexible(
                    child: Row(
                  children: [
                    Container(
                      margin: EdgeInsets.only(left: 10, right: 10),
                      child: Text(
                        groupByValue,
                        textAlign: TextAlign.start,
                        style: TextStyle(
                            fontSize: 14, fontWeight: FontWeight.bold),
                      ),
                    )
                  ],
                ))
              ],
            ),
          ),
          itemBuilder: (context, dynamic element) {
            return Card(
              elevation: 10,
              margin: EdgeInsets.symmetric(horizontal: 10, vertical: 10),
              child: Container(
                padding: EdgeInsets.all(10),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    Expanded(
                        child: ClipRRect(
                      child: Image(
                          image: NetworkImage(element['thumbnailUrl']),
                          fit: BoxFit.cover),
                      borderRadius: BorderRadius.circular(5),
                    )),
                    Expanded(
                      flex: 5,
                      child: Container(
                        padding: EdgeInsets.only(bottom: 10),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            Padding(
                              padding: EdgeInsets.only(left: 10, right: 10),
                              child: Text(
                                element['title'],
                                style: TextStyle(
                                    fontSize: 16, fontWeight: FontWeight.bold),
                                maxLines: 2,
                                overflow: TextOverflow.ellipsis,
                              ),
                            )
                          ],
                        ),
                      ),
                    )
                  ],
                ),
              ),
            );
          },
          itemComparator: (item1, item2) =>
              item1['title'].compareTo(item2['title']), // optional
          useStickyGroupSeparators: true, // optional
          floatingHeader: true, // optional
          order: GroupedListOrder.ASC, // optional
        ));
  }
}
